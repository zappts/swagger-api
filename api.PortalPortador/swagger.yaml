  swagger: "2.0"
  info: 
    description: "Pré-Pago API"
    version: "1.0.0"
    title: "Pré-Pago Portador"
  basePath: "/prepaid-holder/v1"
  tags:
  - name: "cards"
    description: "Operações com cartões"
    externalDocs:
      description: "Find out more"
      url: "http://swagger.io"
  - name: "accounts"
    description: "Operações com contas"
  - name: "portador"
    description: "Operaçoes com os dados do Portador"
  - name: "cognito"
    description: "Operaçoes com o AWS Cognito"
  - name: "boleto"
    description: "Operaçoes de boleto"
  - name: "2FactorAuthentication"
    description: "Operaçoes de dupla autenticação por SMS/E-mail"
  - name: "usuario"
    description: "Operaçoes que envolvem dados do usuário"
  - name: "diversos"
    description: "Operaçoes diversas"
  - name: "transactions"
    description: "Operaçoes diversas"
    externalDocs:
      description: "Find out more about our store"
      url: "http://swagger.io"
  paths: 
    /accounts/{accountId}/cards: 
      get: 
        tags: 
          - "accounts"
        summary: "Lista cartões da conta do portador"
        parameters: []
        responses: 
          200: 
            description: "Cartões encontrados"
            schema:
              $ref: '#/definitions/CardsSchema'
          400:
            description: "Nenhum registro encontrado para essa solicitação"
            schema:
              $ref: '#/definitions/MessageSchema'
      parameters: 
        - 
          name: "accountId"
          in: "path"
          description: "accountId"
          required: true
          type: "string"
        - 
          name: "Authorization"
          in: "header"
          description: "Authorization"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
        
      
    /cpf/{cpf}: 
      get:  
        tags: 
          - "usuario"
        summary: "Valida se o CPF já existe na Conductor"
        parameters: 
        - name: "produtId"
          in: "query"
          type: "string"
          description: "ID Produto no qual usuário se encontra"
        responses: 
          200: 
            description: "Possui cartão pré-pago ativo."
            schema:
              $ref: "#/definitions/MessageSchema"
          400:
            description: "Você não possui cartão pré-pago ativo."
            schema:
              $ref: "#/definitions/MessageSchema"
          404:
            description: "Usuário não encontrado!"
            schema:
              $ref: "#/definitions/MessageSchema"
      parameters: 
        - 
          name: "cpf"
          in: "path"
          description: "cpf"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /cards/{cardId}/password: 
      get:
        tags: 
        - "cards"
        summary: "Valida a senha do cartão do portador"
        parameters:
          - name: "senha"
            in: "query"                
            type: "string"    
        responses: 
          "400":
            description: "Senha incorreta! você já errou a senha x vez(es)"
            schema:
              $ref: "#/definitions/MessageSchema"
          200: 
            description: "Senha correta"
            schema:
              $ref: "#/definitions/MessageSchema"
      put: 
        tags: 
        - "cards"
        summary: "Altera a senha do cartão"
        parameters:
        - in: body
          name: body
          description: "Envio de código"
          schema:
            $ref: '#/definitions/ForgotPasswordSchema'
        responses: 
          200: 
            description: "Senha alterada com sucesso"
            schema:
              $ref: '#/definitions/MessageSchema'
          400:
            description: "Falha ao alterar senha do usuário, verifique se a senha atual está correta e a nova senha atende aos requisitos mínimos."
            schema:
              $ref: '#/definitions/MessageSchema'
      parameters: 
        - 
          name: "cardId"
          in: "path"
          description: "cardId"
          required: true
          type: "string"
        - 
          name: "Authorization"
          in: "header"
          description: "Authorization"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /carriers/{personId}/products/{productId}/accounts: 
      get: 
        tags: 
        - "portador"
        summary: "Lista as contas do portador"
        parameters: [] 
        responses: 
          200: 
            description: "Conta encontrada"
            schema:
              $ref: '#/definitions/CarrierAccountsSchema'
          400:
            description: "Nenhum registro encontrado para essa solicitação"
            schema:
              $ref: '#/definitions/MessageSchema'
      parameters: 
        - 
          name: "productId"
          in: "path"
          description: "productId"
          required: true
          type: "string"
        - 
          name: "personId"
          in: "path"
          description: "personId"
          required: true
          type: "string"
        - 
          name: "Authorization"
          in: "header"
          description: "Authorization"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /oauth/register: 
      post: 
        tags: 
        - "cognito"
        summary: "Registra o usuário"
        parameters:
        - in: body
          name: body
          description: "Parametros de registro"
          schema:
            $ref: '#/definitions/RegisterSchema'
        responses: 
          200: 
            description: "xxxxx cadastrado com sucesso!"
          400:
            description: "Usuário já cadastrado / Verifique se o CPF e o e-mail foram digitados corretamente."
      parameters: 
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    
    /recharge-bankslip-pdf/{ourNumber}: 
      get: 
        tags: 
          - "boleto"
        summary: "Gera o PDF do boleto registrado"
        parameters: []
        responses: 
          200: 
            description: "Código base64 do PDF impresso"
            schema:
              $ref: '#/definitions/RechargePdfSchema'
          400:
            description: 'Número do boleto não encontrado'
      parameters: 
        - 
          name: "ourNumber"
          in: "path"
          description: "ourNumber"
          required: true
          type: "string"
        - 
          name: "Authorization"
          in: "header"
          description: "Authorization"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /oauth/login: 
      post: 
        tags: 
        - "cognito"
        summary: "Login do portador"
        parameters: 
        - in: body
          name: LoginSchema
          description: "Parametros de login"
          schema:
            $ref: '#/definitions/LoginSchema'
        responses: 
          200: 
            description: "Sucesso no login"
            schema:
              $ref: '#/definitions/LoginResponseSchema' 
          401:
            description: "Falha na autenticação. Verifique se os dados foram informados corretamente. / Usuário ou senha incorretos. Você possui mais x tentativas antes do bloqueio de acesso"
          423:
            description: "O seu usuário está bloqueado, por favor realize o processo de esqueceu a senha."
      parameters: 
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /accounts/{accountId}/extract: 
      get: 
        tags: 
          - "accounts"
        summary: "Extrato da conta"
        parameters: 
        - name: "initialDate"
          in: "query"
          type: "string"
        - name: "finalDate"
          in: "query"
          type: "string"
        responses: 
          200: 
            description: "Conta encontrada"
            schema:
              $ref: "#/definitions/ExtractSchema"
          400:
            description: "Nenhum registro encontrado para essa solicitação."
            schema:
              $ref: "#/definitions/MessageSchema"
      parameters: 
        - 
          name: "accountId"
          in: "path"
          description: "accountId"
          required: true
          type: "string" 
        - 
          name: "Authorization"
          in: "header"
          description: "Authorization"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /carriers/{carrierId}/products/{productId}/pdf: 
      get: 
        tags: 
        - "portador"
        summary: "PDF Consolidado"
        parameters: 
        - name: "finalDate"
          in: "query"
          type: "string"
          required: true
        - name: "initialDate"
          in: "query"
          type: "string"
          required: true
        - name: "type"
          in: "query"
          type: "string"
          required: true
        responses: 
          200: 
            description: "Extrato encontrado"
            schema:
              $ref: '#/definitions/CarrierPdfSchema'
          400:
            description: "Nenhum registro encontrado para essa solicitação"
            schema:
              $ref: '#/definitions/MessageSchema'
      parameters: 
        - 
          name: "productId"
          in: "path"
          description: "productId"
          required: true
          type: "string"
        - 
          name: "carrierId"
          in: "path"
          description: "carrierId"
          required: true
          type: "string"
        - 
          name: "Authorization"
          in: "header"
          description: "Authorization"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /accountdetail: 
      get: 
        tags: 
        - "accounts"
        summary: "Detalhe de uma conta"
        parameters:
        - name: "accountId"
          in: "query"
          type: "string"
        responses: 
          200: 
            description: "Conta encontrada"
            schema:
              $ref: "#/definitions/AccountSchema"
          400:
            description: "Nenhum registro encontrado para essa solicitação."
      parameters: 
        - 
          name: "Authorization"
          in: "header"
          description: "Authorization"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /recharge/bankslip/register: 
      post: 
        tags: 
        - "boleto"
        summary: "Registra um boleto no Banco do Brasil"
        parameters: 
        - in: body
          name: body
          description: "Parametros para registro de boleto"
          schema:
            $ref: '#/definitions/RechargeRegisterSchema'
        responses: 
          200: 
            description: "Boleto registrado"
            schema:
              $ref: '#/definitions/RechargeResponseSchema'
          400:
            description: "Falha no registro do boleto."
      parameters: 
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /cards/{cardId}: 
      post: 
        tags: 
          - "cards"
        summary: "Altera o status do cartão"
        parameters: 
        - in: body
          name: body
          description: "parametro para desbloqueio de cartão"
          schema:
              $ref: '#/definitions/UnlockCardRequestSchema'
        responses: 
          200: 
            description: "Cartão desbloqueado"
            schema:
              $ref: '#/definitions/UnlockCardSchema'
          400:
            description: "Status do cartão não permite desbloqueio"
            schema:
              $ref: '#/definitions/MessageSchema'
      parameters: 
        - 
          name: "cardId"
          in: "path"
          description: "cardId"
          required: true
          type: "string"
        - 
          name: "Authorization"
          in: "header"
          description: "Authorization"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /2fa/{username}: 
      get: 
        tags: 
          - "2FactorAuthentication"
        summary: "Valida o código validador que foi enviado"
        parameters: 
          - name: "randomCode"
            in: "query"                
            type: "string"   
        responses: 
          200: 
            description: "Código correto"
          400:
            description: "Código incorreto"
      post: 
        tags: 
          - "2FactorAuthentication"
        consumes:
         - application/json
        summary: "Envia o código validador por SMS e e-mail"
        parameters:
        - in: body
          name: body
          description: Envio de código
          schema:
            $ref: '#/definitions/2faSchema'
        responses:  
          200: 
            description: "Código de validação enviado com sucesso."
          500:
            description: "Internal Server Error"
            schema:
              $ref: '#/definitions/MessageSchema'
      parameters: 
        - 
          name: "username"
          in: "path"
          description: "username"
          required: true
          type: "string"
        - 
          name: "Authorization"
          in: "header"
          description: "Authorization"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /code/{username}/emailsms: 
      post: 
        tags: 
          - "2FactorAuthentication"
        consumes:
         - application/json
        summary: "Envia o código validador por SMS e e-mail"
        parameters:
        - in: body
          name: body
          description: Envio de código
          schema:
            $ref: '#/definitions/2faSchema'
        responses:  
          200: 
            description: "Código de validação enviado com sucesso."
          500:
            description: "Internal Server Error"
            schema:
              $ref: '#/definitions/MessageSchema'
      parameters: 
        - 
          name: "username"
          in: "path"
          description: "username"
          required: true
          type: "string"
        - 
          name: "Authorization"
          in: "header"
          description: "Authorization"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /oauth/password: 
      post: 
        tags: 
        - "cognito"
        summary: "Alterar senha quando é o primeiro acesso"
        parameters: 
        - in: body
          name: body
          description: "Parametros para registrar nova senha"
          schema:
            $ref: '#/definitions/NewPasswordSchema'
        responses: 
          200: 
            description: "Nova senha cadastrada com sucesso!"
          400:
            description: "Usuário ou senha atuais incorretos.   / Nova senha inválida. Ela deve possuir no mínimo 6 caracteres, 1 letra maiúscula, 1 número e 1 caracter especial"
      put:  
        tags: 
        - "cognito"
        summary: "Altera a senha do Portal entrando com a senha anterior"
        parameters: 
        - in: body
          name: body
          description: "Parametros de alteração de senha"
          schema:
            $ref: '#/definitions/AlterPasswordSchema'
        responses: 
          200: 
            description: "Você alterou a senha do Portal Cateno em 23/03/2018 às 13:50. Caso tenha alguma dúvida, entrar em contato com a Central de Atendimento"
            schema:
              $ref: '#/definitions/MessageSchema'
          400:
            description: "Falha ao alterar senha do usuário, verifique se a senha atual está correta e a nova senha atende aos requisitos mínimos."
      parameters: 
        - 
          name: "Authorization"
          in: "header"
          description: "Authorization"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /recharge-payments: 
      get: 
        tags: 
        - "boleto"
        summary: "Atualiza o status de pagamento e efetua a recarga na conta"
        parameters: []
        responses: 
          200: 
            description: "Boletos encontrados"
            schema:
              $ref: '#/definitions/RechargePaymentsSchema'
      parameters: 
        - 
          name: "Authorization"
          in: "header"
          description: "Authorization"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /user/{cpf}: 
      get: 
        tags: 
          - "usuario"
        summary: "Recebe os dados do usuário"
        produces:
          - "application/json"
        parameters: 
        - name: "produtId"
          in: "query"
          type: "string"
          description: "Id produto em qual o usuário se encontra"
        responses: 
          200: 
            description: "Usuário encontrado"
            schema:
              $ref: "#/definitions/UserSchema"
          400:
            description: "Falha ao carregar dados do usuário   /  Nenhuma conta ativa para o usuário encontrada neste domínio."
      parameters: 
        - 
          name: "cpf"
          in: "path"
          description: "cpf"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /password/forgot: 
      get: 
        tags: 
        - "cognito"
        summary: "Solicita código validador para alterar a senha"
        parameters:
        - name: "username"
          in: "query"
          type: "string"
        - name: "idCompany"
          in: "query"
          type: "string"
        responses: 
          201: 
            description: "Uma nova senha foi enviada para xxx"
            schema:
              $ref: '#/definitions/MessageSchema'
          400:
            description: "Você ainda está com senha temporária, para continuar você precisará de uma nova. Favor voltar ao início do portal e solicitar um novo cadastro de acesso para receber uma nova senha."
      post: 
        tags: 
        - "cognito"
        summary: "Altera a senha do portal esquecida"
        parameters: 
        - in: body
          name: body
          description: "parametros de confirmação de senha"
          schema:
            $ref: '#/definitions/ConfirmPasswordSchema'
        responses: 
          200: 
            description: "Confirmação bem sucedida"
            schema:
              $ref: '#/definitions/LoginResponseSchema'
          400:
            description: "Código de verificação inválido / Falha ao resetar a senha / A senha não atende aos requisitos mínimos. Ela deve possuir ao menos 1 letra minúscula, 1 letra maiúscula, 1 número e 1 caracter especial."
      parameters: 
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /recharge/bankslip/pdf/{email}: 
      post: 
        tags: 
        - "boleto"
        summary: "Envia o pdf de recarga de boleto por e-mail"
        parameters: 
        - in: body
          name: body
          description: "Parametro de envio do boleto por PDF"
          schema:
            $ref: '#/definitions/RechargeEmailPdfSchema'
        responses: 
          200: 
            description: "The email was successfully sent"
          400:
            description: "The email could not be sent"
      parameters: 
        - 
          name: "email"
          in: "path"
          description: "email"
          required: true
          type: "string"
        - 
          name: "Authorization"
          in: "header"
          description: "Authorization"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /cards: 
      get:
        tags: 
        - "cards"
        summary: "Lista os dados do cartão pelo número do cartão"
        parameters: []
        responses: 
          200: 
            description: "Cartão encontrado"
            schema:
              $ref: "#/definitions/CardSchema"
          404:
            description: "Nenhum registro encontrado para essa solicitação"
            schema:
              $ref: "#/definitions/MessageSchema"
      parameters: 
        - 
          name: "Authorization"
          in: "header"
          description: "Authorization"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /cep: 
      get: 
        tags:
        - "Diversos"
        summary: "Pega os dados do endereço por CEP"
        parameters: 
        - name: "cep"
          in: "query"
          type: "string"
        responses: 
          200: 
            description: "Cep encontrado"
            schema:
              $ref: '#/definitions/CepSchema'
          404:
            description: "Cep não informado"
            schema:
              $ref: '#/definitions/MessageSchema'
      parameters: 
        - 
          name: "Authorization"
          in: "header"
          description: "Authorization"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /account: 
      post: 
        tags: 
          - "accounts"
        summary: "Retorna o id da conta através do número do cartão para fazer transferência"
        parameters:
        - in: body
          name: body
          description: "Envio de nova senha"
          schema:
            $ref: '#/definitions/CryptographedCardNumber'
        responses: 
          200: 
            description: "160030"
          500:
            description: "Internal Server Error"
      parameters: 
        - 
          name: "Authorization"
          in: "header"
          description: "Authorization"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /accounts/{accountId}/transaction/p2p: 
      post: 
        tags: 
          - "transactions"
        summary: "Realiza operação p2p"
        parameters:
        - in: body
          name: body
          description: "parametros para operaçao"
          schema:
            $ref: '#/definitions/P2pSchema'
        responses: 
          200: 
            description: "Gerando comprovante de cliente"
          500:
            description: "Internal Server Error"
      parameters: 
        - 
          name: "accountId"
          in: "path"
          description: "Id da conta"
          required: true
          type: "string"
        - 
          name: "Authorization"
          in: "header"
          description: "Authorization"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /accounts/{accountId}/transaction/recharge-cell: 
      post: 
        tags: 
          - "transactions"
        summary: "Realiza operação de recarga de celular"
        parameters:
        - in: body
          name: body
          description: "parametros para operaçao"
          schema:
            $ref: '#/definitions/RechargeCellSchema'
        responses: 
          200: 
            description: "Gerando comprovante de cliente"
          500:
            description: "Internal Server Error"
      parameters: 
        - 
          name: "accountId"
          in: "path"
          description: "Id da conta"
          required: true
          type: "string"
        - 
          name: "Authorization"
          in: "header"
          description: "Authorization"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /accounts/{accountId}/transaction/bill-payment: 
      post: 
        tags: 
          - "transactions"
        summary: "Realiza operação de pagamento de boleto"
        parameters:
        - in: body
          name: body
          description: "parametros para operaçao"
          schema:
            $ref: '#/definitions/PagamentoBoletoSchema'
        responses: 
          200: 
            description: "Gerando comprovante de cliente"
          500:
            description: "Internal Server Error"
      parameters: 
        - 
          name: "accountId"
          in: "path"
          description: "Id da conta"
          required: true
          type: "string"
        - 
          name: "Authorization"
          in: "header"
          description: "Authorization"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
    /accounts/{accountId}/transaction/transfer: 
      post: 
        tags: 
          - "transactions"
        summary: "Realiza operação de transferência bancária"
        parameters:
        - in: body
          name: body
          description: "parametros para operaçao"
          schema:
            $ref: '#/definitions/TransferSchema'
        responses: 
          200: 
            description: "Gerando comprovante de cliente"
          500:
            description: "Internal Server Error"
      parameters: 
        - 
          name: "accountId"
          in: "path"
          description: "Id da conta"
          required: true
          type: "string"
        - 
          name: "Authorization"
          in: "header"
          description: "Authorization"
          required: true
          type: "string"
        - 
          name: "client_id"
          in: "header"
          description: "client_id"
          required: true
          type: "string"
  definitions:
    UnlockCardRequestSchema:
      type: "object"
      properties:
        transactionToken:
          type: "string"
    P2pSchema:
      type: "object"
      properties:
        valorTotal:
          type: "string"
        cpf_cnpj_destinatario:
          type: "string"
        conta_cartao_origem:
          type: "string"
        clienteNome_origem:
          type: "string"
        favorecido:
          type: "string"
        conta_cartao_destinatario:
          type: "string"
        conta_destinatario:
          type: "string"
        transactionToken:
          type: "string"
    TransferSchema:
      type: "object"
      properties:
        agencia_destinatario:
          type: "string"
        conta_destinatario:
          type: "string"
        digitoConta_destinatario:
          type: "string"
        banco_destinatario:
          type: "string"
        tipoConta_destinatario:
          type: "string"
        favorecido:
          type: "string"
        valorTotal:
          type: "string"
        tipoTransferencia:
          type: "string"
        cpf_cnpj_destinatario:
          type: "string"
        conta_cartao_origem:
          type: "string"
        clienteNome_origem:
          type: "string"
        destinatario:
          type: "string"
        valorTarifa:
          type: "string"
        protocolId:
          type: "string"
        autenticacao:
          type: "string"
        transactionToken:
          type: "string"
    PagamentoBoletoSchema:
      type: "object"
      properties:
        valorTotal:
          type: "string"
        dataVencimento:
          type: "string"
        serviceType:
          type: "string"
        statusComprovante:
          type: "string"
        instituicaoRecebedora:
          type: "string"
        protocolPaymentId:
          type: "string"
        protocolId:
          type: "string"
        cpf_cnpj_destinatario:
          type: "string"
        conta_cartao_origem:
          type: "string"
        clienteNome_origem:
          type: "string"
        transactionToken:
          type: "string"
        cod_barra:
          type: "string"
    RechargeCellSchema:
      type: "object"
      properties:
        valorTotal:
          type: "string"
        operadora:
          type: "string"
        ddd:
          type: "string"
        countrycode:
          type: "string"
        numero_Cell:
          type: "string"
        clienteNome_origem:
          type: "string"
        cpf_cnpj_origem:
          type: "string"
        tarifa:
          type: "string"
        transactionToken:
          type: "string"
    MessageSchema:
      type: "object"
      properties:
        message:
          type: "string"
    CardAlterPasswordSchema:
      type: "object"
      properties:
        password:
          type: "string"
        newPassword:
          type: "string"
        randomCode:
          type: "string"
    2faSchema:
      type: "object"
      properties:
        email:
          type: "string"
        phoneNumber:
          type: "string"
    UserSchema:
      type: "object"
      properties:
        id:
          type: "number"
        nome:
          type: "string"
        tipo:
          type: "number"
        cpf:
          type: "string"
        dataNascimento:
          type: "number"
        sexo:
          type: "string"
        numeroIdentidade:
          type: "number"
        orgaoExpedidorIdentidade:
          type: "string"
        unidadeFederativaIdentidade:
          type: "string"
        dataEmissaoIdentidade:
          type: "number"
        email:
          type: "string"
        telefone:
          type: object
          properties:
            id:
              type: "number"
            idTipoTelefone:
              type: "number"
            idPessoa:
              type: "number"
            ddd:
              type: "string"
            telefone:
              type: "string"
            ramal:
              type: "string"
            status:
              type: "number"
    CardSchema:
      type: "object"
      properties:
        id:
          type: "number"
        flagTitular:
          type: "number"
        idPessoa:
          type: "number"
        sequencialCartao:
          type: "number"
        idConta:
          type: "number"
        idStatus:
          type: "number"
        dataStatus:
          type: "string"
        idEstagio:
          type: "number"
        dataEstagio:
          type: "string"
        numeroBin:
          type: "number"
        numeroCartao:
          type: "number"
        numeroCartaoHash:
          type: "string"
        numeroCartaoCriptografado:
          type: "string"
        dataEmissao:
          type: "string"
        dataValidade:
          type: "string"
        cartaoVirtual:
          type: "number"
        impressaoAvulsa:
          type: "string"
        dataImpressao:
          type: "string"
        nomeArquivoImpressao:
          type: "string"
        idProduto:
          type: "number"
        nomeImpresso:
          type: "string"
        codigoDesbloqueio:
          type: "string"
        tipoPortador:
          type: "string"
        idStatusCartao:
          type: "number"
        dataStatusCartao:
          type: "string"
        idEstagioCartao:
          type: "number"
        dataEstagioCartao:
          type: "string"
        dataGeracao:
          type: "string"
        flagVirtual:
          type: "boolean"
        flagImpressaoOrigemComerial:
          type: "string"
        arquivoImpressao:
          type: "string"
    UnlockCardSchema:
      type: "object"
      properties:
        id:
          type: "number"
        flagTitular:
          type: "number"
        idPessoa:
          type: "number"
        sequencialCartao:
          type: "number"
        idConta:
          type: "number"
        idStatus:
          type: "number"
        dataStatus:
          type: "string"
        idEstagio:
          type: "number"
        dataEstagio:
          type: "string"
        numeroBin:
          type: "number"
        numeroCartao:
          type: "number"
        numeroCartaoHash:
          type: "string"
        numeroCartaoCriptografado:
          type: "string"
        dataEmissao:
          type: "string"
        dataValidade:
          type: "string"
        cartaoVirtual:
          type: "number"
        impressaoAvulsa:
          type: "string"
        dataImpressao:
          type: "string"
        nomeArquivoImpressao:
          type: "string"
        idProduto:
          type: "number"
        nomeImpresso:
          type: "string"
    ForgotPasswordSchema:
      type: "object"
      properties:
        username:
          type: "string"
        idCompany:
          type: "string"
        password:
          type: "string"
        newPassword:
          type: "string"
    ResetPasswordSchema:
      type: "object"
      properties:
        username:
          type: "string"
        idCompany:
          type: "string"
    CryptographedCardNumber:
      type: "object"
      properties:
        encryptedParam:
          type: "string"
    AccountSchema:
      type: "object"
      properties:
        id:
          type: "number"
        idPessoa:
          type: "number"
        nome:
          type: "string"
        idProduto:
          type: "number"
        idOrigemComercial:
          type: "number"
        nomeOrigemComercial:
          type: "string"
        idFatasiaBasica:
          type: "number"
        nomeFantasiaBasica:
          type: "string"
        idStatusConta:
          type: "number"
        statusConta:
          type: "string"
        diaVencimento:
          type: "number"
        melhorDiaCompra:
          type: "number"
        dataStatusConta:
          type: "string"
        dataCadastro:
          type: "string"
        dataUltimaAlteracaoVencimento:
          type: "string"
        dataHoraUltimaCompra:
          type: "string"
        numeroAgencia:
          type: "number"
        numeroContaCorrente:
          type: "string"
        valorRenda:
          type: "number"
        formaEnvioFatura:
          type: "string"
        titular:
          type: "boolean"    
        limiteGlobal:
          type: "number"
        limiteSaqueGlobal:
          type: "number"
        saldoDisponivelGlobal:
          type: "number"
        saldoDisponivelSaque:
          type: "number"
        impedidoFinanciamento:
          type: "boolean"
        diasAtraso:
          type: "number"
        proximoVencimentoPadrao:
          type: "string"
        idProposta:
          type: "number"
        quantidadePagamentos:
          type: "number"
        correspondencia:
          type: "number"
        dataInicioAtraso:
          type: "string"
        rotativoPagaJuros:
          type: "number"
        totalPosProx:
          type: "number"
        saldoAtualFinal:
          type: "number"
        saldoExtratoAnterior:
          type: "number"
        aceitaNovaContaPorGrupoProduto:
          type: "boolean"
        funcaoAtiva:
          type: "string"
    ExtractSchema:
      type: "object"
      properties:
        id:
          type: "number"
        idTipoTransacao:
          type: "number"
        descricaoAbreviada:
          type: "string"
        statusTransacao:
          type: "string"
        idEvento:
          type: "number"
        tipoEvento:
          type: "string"
        idConta:
          type: "number"
        cartaoMascarado:
          type: "string"
        nomePortador:
          type: "string"
        dataTransacao:
          type: "string"
        dataFaturamento:
          type: "string"
        dataVencimento:
          type: "string"
        modoEntradaTransacao:
          type: "string"
        valorTaxaEmbarque:
          type: "number"
        valorEntrada:
          type: "number"
        valorBRL:
          type: "number"
        valorUSD:
          type: "number"
        cotacaoUSD:
          type: "number"
        dataCotacaoUSD:
          type: "string"
        codigoMoedaOrigem:
          type: "string"
        codigoMoedaDestino:
          type: "string"    
        codigoAutorizacao:
          type: "string"
        codigoReferencia:
          type: "string"
        codigoTerminal:
          type: "string"
        codigoMCC:
          type: "number"
        grupoMCC:
          type: "number"
        grupoDescricaoMCC:
          type: "string"
        idEstabelecimento:
          type: "number"
        nomeEstabelecimento:
          type: "string"
        nomeFantasiaEstabelecimento:
          type: "string"
        localidadeEstabelecimento:
          type: "string"
        planoParcelamento:
          type: "number"
        numeroParcela:
          type: "number"
        detalhesTransacao:
          type: "string"
        flagCredito:
          type: "number"
        flagFaturado:
          type: "number"
        flagEstorno:
          type: "number"
        idTransacaoEstorno:
          type: "number"
    CardsSchema:
      type: "object"
      properties:
        id:
          type: "number"
        flagTitular:
          type: "number"
        idPessoa:
          type: "number"
        sequencialCartao:
          type: "number"
        idConta:
          type: "number"
        idStatus:
          type: "number"
        dataStatus:
          type: "string"
        idEstagio:
          type: "number"
        dataEstagio:
          type: "string"
        numeroBin:
          type: "number"
        numeroCartao:
          type: "string"
        numeroCartaoHash:
          type: "number"
        numeroCartaoCriptografado:
          type: "string"
        dataEmissao:
          type: "string"
        dataValidade:
          type: "string"
        cartaoVirtual:
          type: "number"
        impressaoAvulsa:
          type: "number"
        dataImpressao:
          type: "string"
        nomeArquivoImpressao:
          type: "string"
        idProduto:
          type: "number"
        nomeImpresso:
          type: "string"    
        codigoDesbloqueio:
          type: "string"
    RegisterSchema:
      type: "object"
      properties:
        username:
          type: "string"
        idCompany:
          type: "string"
        email:
          type: "string"
    LoginSchema:
      type: "object"
      properties:
        username:
          type: "string"
        idCompany:
          type: "string"
        password:
          type: "string"
    LoginResponseSchema:
      type: "object"
      properties:
        first_access:
          type: "string"
        access_token:
          type: "string"
        refresh_token:
          type: "string"
    ConfirmPasswordSchema:
      type: "object"
      properties:
        username:
          type: "string"
        code:
          type: "string"
        idCompany:
          type: "string"
        password:
          type: "string"
    AlterPasswordSchema:
      type: "object"
      properties:
        username:
          type: "string"
        oldpass:
          type: "string"
        newpass:
          type: "string"
        idCompany:
          type: "string"
    RechargePdfSchema:
      type: "object"
      properties:
        pdf:
          type: "string"
    RechargeRegisterSchema:
      type: "object"
      properties:
        account:
          type: "string"
        cpf:
          type: "string"
        value:
          type: "string"
        productId:
          type: "string"
    RechargeResponseSchema:
      type: "object"
      properties:
        titleNumberBb:
          type: "string"
        digitableLine:
          type: "string"
        numericBarcode:
          type: "string"
        codigoCliente:
          type: "string"
        numeroContratoCobranca:
          type: "string"
        digitableLineFormatted:
          type: "string"
        info:
          type: "object"
          properties:
            product:
              type: "string"
            cpf:
              type: "string"
            account:
              type: "string"
            date:
              type: "string"
            transactionToken:
              type: "string"
    RechargePaymentsSchema:
      type: "array"
      items:
        type: "object"
        properties:
          bankslip:      
            type: "string"
          command:
            type: "string"
          status:
            type: "string"
          registro:
            type: "string"
    RechargeEmailPdfSchema:
         type: "object"
         properties:
          ourNumber:      
            type: "string"
          email:
            type: "string"
    CarrierAccountsSchema:
        type: "object"
        properties: 
          id:
            type: "number"
          idProduto:
            type: "number"
          idOrigemComercial:
            type: "number"
          idPessoa:
            type: "number"
          idStatusConta:
            type: "number"
          diaVencimento:
            type: "number"
          melhorDiaCompra:
            type: "number"
          dataStatusConta:
            type: "string"
          dataCadastro:
            type: "string"
          dataUltimaAlteracaoVencimento:
            type: "string"
          valorRenda:
            type: "number"
          idProposta:
            type: "number"
          funcaoAtiva:
            type: "string"
    CarrierPdfSchema:
      type: "object"
      properties:
        id:
          type: "number"
        idPessoa:
          type: "number"
        nome:
          type: "string"
        idProduto:
          type: "number"
        idOrigemComercial:
          type: "number"
        nomeOrigemComercial:
          type: "string"
        idFatasiaBasica:
          type: "number"
        nomeFantasiaBasica:
          type: "string"
        idStatusConta:
          type: "number"
        statusConta:
          type: "string"
        diaVencimento:
          type: "number"
        melhorDiaCompra:
          type: "number"
        dataStatusConta:
          type: "string"
        dataCadastro:
          type: "string"
        dataUltimaAlteracaoVencimento:
          type: "string"
        dataHoraUltimaCompra:
          type: "string"
        numeroAgencia:
          type: "number"
        numeroContaCorrente:
          type: "string"
        valorRenda:
          type: "number"
        formaEnvioFatura:
          type: "string"
        titular:
          type: "boolean"    
        limiteGlobal:
          type: "number"
        limiteSaqueGlobal:
          type: "number"
        saldoDisponivelGlobal:
          type: "number"
        saldoDisponivelSaque:
          type: "number"
        impedidoFinanciamento:
          type: "boolean"
        diasAtraso:
          type: "number"
        proximoVencimentoPadrao:
          type: "string"
        idProposta:
          type: "number"
        quantidadePagamentos:
          type: "number"
        correspondencia:
          type: "number"
        dataInicioAtraso:
          type: "string"
        rotativoPagaJuros:
          type: "number"
        totalPosProx:
          type: "number"
        saldoAtualFinal:
          type: "number"
        saldoExtratoAnterior:
          type: "number"
        aceitaNovaContaPorGrupoProduto:
          type: "boolean"
        funcaoAtiva:
          type: "string"
        extract:
          type: "array"
          items:
            type: "object"
            properties:
              id:
                type: "number"
              idTipoTransacao:
                type: "number"
              descricaoAbreviada:
                type: "string"
              statusTransacao:
                type: "string"
              idEvento:
                type: "number"
              tipoEvento:
                type: "string"
              idConta:
                type: "number"
              cartaoMascarado:
                type: "string"
              nomePortador:
                type: "string"
              dataTransacao:
                type: "string"
              dataFaturamento:
                type: "string"
              dataVencimento:
                type: "string"
              modoEntradaTransacao:
                type: "string"
              valorTaxaEmbarque:
                type: "number"
              valorEntrada:
                type: "number"
              valorBRL:
                type: "number"
              valorUSD:
                type: "number"
              cotacaoUSD:
                type: "number"
              dataCotacaoUSD:
                type: "string"
              codigoMoedaOrigem:
                type: "string"
              codigoMoedaDestino:
                type: "string"    
              codigoAutorizacao:
                type: "string"
              codigoReferencia:
                type: "string"
              codigoTerminal:
                type: "string"
              codigoMCC:
                type: "number"
              grupoMCC:
                type: "number"
              grupoDescricaoMCC:
                type: "string"
              idEstabelecimento:
                type: "number"
              nomeEstabelecimento:
                type: "string"
              nomeFantasiaEstabelecimento:
                type: "string"
              localidadeEstabelecimento:
                type: "string"
              planoParcelamento:
                type: "number"
              numeroParcela:
                type: "number"
              detalhesTransacao:
                type: "string"
              flagCredito:
                type: "number"
              flagFaturado:
                type: "number"
              flagEstorno:
                type: "number"
              idTransacaoEstorno:
                type: "number"
    CepSchema:
      type: "object"
      properties:
        cep:
          type: "string"
        endereco:
          type: "string"
        bairro: 
          type: "string"
        cidade:
          type: "string"
        uf:
          type: "string"
    NewPasswordSchema:
      type: "object"
      properties:
        username:
          type: "string"
        idCompany:
          type: "string"
        password: 
          type: "string"
        newPassword:
          type: "string"
